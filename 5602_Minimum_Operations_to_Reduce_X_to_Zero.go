// 2020/11/15
package main

import (
	"fmt"
	"math"
	"time"
)

func main() {
	start := time.Now()
	nums, x := []int{1, 1, 4, 2, 3}, 5
	fmt.Println(minOperations(nums, x) == 2)
	nums, x = []int{5, 6, 7, 8, 9}, 4
	//fmt.Println(minOperations(nums, x) == -1)
	//nums, x = []int{1, 1}, 3
	//fmt.Println(minOperations(nums, x) == -1)
	//nums, x = []int{3, 2, 20, 1, 1, 3}, 10
	//fmt.Println(minOperations(nums, x) == 5)
	//nums, x = []int{1241, 8769, 9151, 3211, 2314, 8007, 3713, 5835, 2176, 8227, 5251, 9229,
	//	904, 1899, 5513, 7878, 8663, 3804, 2685, 3501, 1204, 9742, 2578, 8849, 1120, 4687,
	//	5902, 9929, 6769, 8171, 5150, 1343, 9619, 3973, 3273, 6427, 47, 8701, 2741, 7402,
	//	1412, 2223, 8152, 805, 6726, 9128, 2794, 7137, 6725, 4279, 7200, 5582, 9583, 7443,
	//	6573, 7221, 1423, 4859, 2608, 3772, 7437, 2581, 975, 3893, 9172, 3, 3113, 2978,
	//	9300, 6029, 4958, 229, 4630, 653, 1421, 5512, 5392, 7287, 8643, 4495, 2640, 8047,
	//	7268, 3878, 6010, 8070, 7560, 8931, 76, 6502, 5952, 4871, 5986, 4935, 3015, 8263,
	//	7497, 8153, 384, 1136}, 894887480
	//fmt.Println(minOperations(nums, x) == -1)
	//nums, x = []int{6285, 2511, 3617, 8040, 6970, 8187, 5617, 7665, 5069, 875, 3570, 378,
	//	6556, 1147, 8616, 3140, 561, 2875, 5087, 1372, 2617, 756, 9076, 1381, 5428, 498,
	//	1386, 6984, 5624, 7908, 5724, 9921, 4368, 7036, 92, 4584, 2654, 2942, 9947, 9832,
	//	9969, 9965, 9991, 9999, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000,
	//	10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000,
	//	10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000,
	//	10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 9992, 10000, 9985,
	//	8145, 8244, 4960, 7560, 7757, 3981, 8841, 3482, 2188, 3475, 1594, 5101, 4404, 9679,
	//	3500, 6984, 5108, 7258, 9696, 702, 9031, 2502, 2326, 5099, 4767, 7164, 9432, 2084,
	//	5294, 7382, 7564, 809}, 842910
	//fmt.Println(minOperations(nums, x) == 120)
	//nums, x = []int{5207, 5594, 477, 6938, 8010, 7606, 2356, 6349, 3970, 751, 5997, 6114,
	//	9903, 3859, 6900, 7722, 2378, 1996, 8902, 228, 4461, 90, 7321, 7893, 4879, 9987,
	//	1146, 8177, 1073, 7254, 5088, 402, 4266, 6443, 3084, 1403, 5357, 2565, 3470, 3639,
	//	9468, 8932, 3119, 5839, 8008, 2712, 2735, 825, 4236, 3703, 2711, 530, 9630, 1521,
	//	2174, 5027, 4833, 3483, 445, 8300, 3194, 8784, 279, 3097, 1491, 9864, 4992, 6164,
	//	2043, 5364, 9192, 9649, 9944, 7230, 7224, 585, 3722, 5628, 4833, 8379, 3967, 5649,
	//	2554, 5828, 4331, 3547, 7847, 5433, 3394, 4968, 9983, 3540, 9224, 6216, 9665, 8070,
	//	31, 3555, 4198, 2626, 9553, 9724, 4503, 1951, 9980, 3975, 6025, 8928, 2952, 911, 3674,
	//	6620, 3745, 6548, 4985, 5206, 5777, 1908, 6029, 2322, 2626, 2188, 5639}, 565610
	//fmt.Println(minOperations(nums, x))
	elapsed := time.Now().Sub(start)
	fmt.Println(elapsed)
}

func minOperations(nums []int, x int) int {
	if nums[0] > x && nums[len(nums)-1] > x {
		return -1
	}

	l := len(nums)
	left, right := 0, l-1

	test := x
	sum := 0
	for i, n := range nums {
		test -= n
		sum += n
		if test < 0 {
			left = i
			break
		}
	}
	if test > 0 {
		return -1
	}
	//fmt.Println("test:", test)
	if test == 0 {
		return l
	}

	for left > -1 {
		fmt.Println(left, right, sum)
		if sum == x {
			fmt.Println(left + l - right)
			return left + l - right
		}
		if sum > x {
			sum -= nums[left]
			left -= 1
		}
		if sum < x {
			sum += nums[right]
			right -= 1
		}
	}

	//ans := dfs(nums, x, 0)
	//fmt.Println(ans)
	//fmt.Println(ans == math.MaxInt16)
	//if ans < math.MaxInt16 {
	//	return ans
	//}
	return -1
}

func dfs(nums []int, x, count int) int {
	fmt.Println(nums, x)
	if x == 0 {
		return count
	}
	if len(nums) == 0 {
		return math.MaxInt16
	}

	c1, c2 := math.MaxInt16, math.MaxInt16
	if x-nums[0] >= 0 {
		c1 = dfs(nums[1:], x-nums[0], count+1)
	}
	l := len(nums)
	if x-nums[l-1] >= 0 {
		c2 = dfs(nums[:l-1], x-nums[l-1], count+1)
	}

	if c1 > c2 {
		return c2
	}
	return c1
}
